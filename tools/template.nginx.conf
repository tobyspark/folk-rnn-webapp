# Handle proxying of websockets
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect HTTP to HTTPS, stripping 'www.' if present
server {
    listen 80;
    server_name kDOMAIN www.kDOMAIN;
    return 301 https://kDOMAIN$request_uri;
}

# Serve only on HTTPS
server {
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/folkrnn.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/folkrnn.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    server_name kDOMAIN;
    client_max_body_size 1000M;

    location /static {
         alias kSTATIC;
    }

    location / {
        proxy_pass http://unix:kSOCKET;
        proxy_set_header Host kDOMAIN;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}