# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-07-20 15:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('archiver', '0012_auto_20180718_1625'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('text', models.TextField(help_text='This is a markdown field, e.g. *italics* and [a link](http://tobyz.net)')),
                ('tune_vote_open', models.DateField()),
                ('recording_submit_open', models.DateField()),
                ('recording_vote_open', models.DateField()),
                ('recording_vote_close', models.DateField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_set', related_query_name='comment', to='archiver.Competition')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Competition')),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Recording')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionRecordingVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('votable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_set', related_query_name='vote', to='archiver.CompetitionRecording')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionTune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Competition')),
                ('tune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Tune')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionTuneVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('votable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_set', related_query_name='vote', to='archiver.CompetitionTune')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='tunecomment',
            name='tune',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_set', related_query_name='comment', to='archiver.Tune'),
        ),
        migrations.AlterUniqueTogether(
            name='competitiontunevote',
            unique_together=set([('user', 'votable')]),
        ),
        migrations.AlterUniqueTogether(
            name='competitionrecordingvote',
            unique_together=set([('user', 'votable')]),
        ),
    ]
