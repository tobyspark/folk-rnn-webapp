# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-07-18 20:04
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('archiver', '0012_auto_20180718_1625'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('text', models.TextField()),
                ('tune_vote_open', django.contrib.postgres.fields.ranges.DateRangeField()),
                ('recording_vote_open', django.contrib.postgres.fields.ranges.DateRangeField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_set', related_query_name='comment', to='archiver.Competition')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionRecordingVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.CompetitionRecording')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionTune',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Competition')),
                ('tune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Tune')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionTuneVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_tune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.CompetitionTune')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='tunecomment',
            name='tune',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_set', related_query_name='comment', to='archiver.Tune'),
        ),
        migrations.AddField(
            model_name='competitionrecording',
            name='competition_tune',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.CompetitionTune'),
        ),
        migrations.AddField(
            model_name='competitionrecording',
            name='recording',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archiver.Recording'),
        ),
    ]
