#!/bin/bash

echo "******************************************************"
echo "*                                                    *"
echo "* FOLK_RNN                                           *"
echo "*                                                    *"
echo "* About to launch web app                            *"
echo "* Browse to 127.0.0.1:8000 on the host machine       *"
echo "*                                                    *"
echo "******************************************************"

echo
echo "* Checking database..."
python3.6 /folk_rnn_webapp/folk_rnn_site/manage.py migrate --no-input

if [ ${1:-prod} = "dev" ]; then

echo
echo "* Running the webapp using Django's test server"

# Allow test app port through firewall
sudo ufw allow 8000/tcp

# Note 0.0.0.0 is necessary for access from outside the VM
python3.6 /folk_rnn_webapp/folk_rnn_site/manage.py runworker folk_rnn &
python3.6 /folk_rnn_webapp/folk_rnn_site/manage.py runserver 0.0.0.0:8000

trap 'kill $(jobs -p)' EXIT

else

# VAGRANT BUG WORKAROUND
if [ $USER = root ]; then
    echo "* Error: This has been run by root user. It should be run by folkrnn. Please ssh in and /folk_rnn_webapp/runserver"
    echo "* ...this seems to be an issue when vagrant up creates a fresh linode instance; priviliged:false is ignored"
    exit 1
fi

echo
echo "* Collecting static files"

python3.6 /folk_rnn_webapp/folk_rnn_site/manage.py collectstatic --no-input

echo
echo "* Running the webapp using NGINX, Daphne and Redis"

# Disallow test app port through firewall, in case it was set through using test server.
if sudo ufw status | grep "8000/tcp"; then
    sudo ufw delete allow 8000/tcp
fi

sudo systemctl restart nginx
sudo systemctl restart daphne
sudo systemctl restart redis-server
sudo systemctl restart worker-folkrnn@{1..1} # Worker numbers should scale with CPU cores.

sudo systemctl status nginx
sudo systemctl status daphne
sudo systemctl status redis-server
sudo systemctl status worker-folkrnn@1

fi